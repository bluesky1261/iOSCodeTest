//
//  DetailViewController.swift
//  iOSCodeTest
//
//  Created by Joonghoo Im on 2021/04/15.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class DetailViewController: UIViewController {

    @IBOutlet weak var detailCollectionView: UICollectionView!

    // MARK: - Public properties -

    var presenter: DetailPresenterInterface!

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()

        setupUI()
    }
}

// MARK: - Extensions -

extension DetailViewController: DetailViewInterface {
    func setupUI() {
        let detailCollectionViewLayout = UICollectionViewFlowLayout()

        detailCollectionViewLayout.scrollDirection = .horizontal
        detailCollectionViewLayout.itemSize = detailCollectionView.frame.size
        detailCollectionViewLayout.sectionInset = .zero
        detailCollectionViewLayout.minimumLineSpacing = .zero
        detailCollectionViewLayout.minimumInteritemSpacing = .zero

        detailCollectionView.setCollectionViewLayout(detailCollectionViewLayout, animated: false)
        detailCollectionView.isPagingEnabled = true
        detailCollectionView.alwaysBounceHorizontal = true

        detailCollectionView.dataSource = self

        let bundle = Bundle(for: DetailPictureCell.self)
        let nib = UINib(nibName: String(describing: DetailPictureCell.self), bundle: bundle)

        detailCollectionView.register(nib, forCellWithReuseIdentifier: String(describing: DetailPictureCell.self))
    }
}

extension DetailViewController: UICollectionViewDataSource {
    func numberOfSections(in collectionView: UICollectionView) -> Int {
        return 1
    }

    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return 10
    }

    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = detailCollectionView.dequeueReusableCell(withReuseIdentifier: String(describing: DetailPictureCell.self), for: indexPath) as! DetailPictureCell

        return cell
    }
}
